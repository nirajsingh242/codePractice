package threadseExample;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class ExecutorServiceExample {
    public static void main(String[] args) {
//        ExecutorService executorService = Executors.newSingleThreadExecutor();
//        executorService.execute(() -> {
//            System.out.println("Thread is running");
//        });
//        executorService.shutdown(); // Gracefully shuts down the executor service
        
        //order of execution cannot be defined.
        
        ExecutorService executorServices = Executors.newFixedThreadPool(10);
        executorServices.execute((() -> {
            System.out.println("Thread is 0 "+Thread.currentThread().getName());
        }));
        executorServices.execute((() -> {
            System.out.println("Thread is 1 "+Thread.currentThread().getName());
        }));
        executorServices.execute((() -> {
            System.out.println("Thread is 2 "+Thread.currentThread().getName());
        }));
        executorServices.execute((() -> {
            System.out.println("Thread is 3 "+Thread.currentThread().getName());
        }));
        executorServices.execute((() -> {
            System.out.println("Thread is 4 "+Thread.currentThread().getName());
        }));
        executorServices.execute((() -> {
            System.out.println("Thread is 5 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 6 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 7 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 8 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 9 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 10 "+Thread.currentThread().getName());
        }));
        
        executorServices.execute((() -> {
            System.out.println("Thread is 10 "+Thread.currentThread().getName());
        }));
        
        
        
    }
}
