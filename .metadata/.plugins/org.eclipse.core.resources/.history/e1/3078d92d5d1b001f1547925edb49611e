package designPatternsCreational;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

public class Phone {
	
	
	private String os;
	private int ram;
	private String processor;
	private int battery;
	



	@Override
	public int hashCode() {
		return Objects.hash(battery, os, processor, ram);
	}




	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Phone other = (Phone) obj;
		return battery == other.battery && Objects.equals(os, other.os) && Objects.equals(processor, other.processor)
				&& ram == other.ram;
	}




	public Phone(String os, int ram, String processor, int battery) {
		super();
		this.os = os;
		this.ram = ram;
		this.processor = processor;
		this.battery = battery;
	}




	@Override
	public String toString() {
		return "Phone [os=" + os + ", ram=" + ram + ", processor=" + processor + ", battery=" + battery + "]";
	}




	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		Phone p=new PhoneBuilder().setRam(12).setBattery(555).setProcessor("2").setOs("apple").build();
		System.out.println(p);
		 HashMap<Phone,String> employeeMap = new HashMap<Phone,String>(); 
		 
		 employeeMap.put(p, "firt value");
		 
		 for (Map.Entry<Phone, String> employeeStringEntry : employeeMap.entrySet()) {
		        System.out.println(employeeStringEntry.getKey().hashCode());
		    }
		 Phone p2=new PhoneBuilder().setRam(12).setBattery(555).setProcessor("2").setOs("apple").build();

		 employeeMap.put(p2, "second value");
		 for (Map.Entry<Phone, String> employeeStringEntry : employeeMap.entrySet()) {
		        System.out.println(employeeStringEntry.getKey().hashCode());
		    }
		 
		 System.out.println(employeeMap.get(p2));
	}

}
